version: "3.8"

services:
  db:
    image: "tegonhq/tegon-postgres:${VERSION}"
    container_name: tegon-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    networks:
      - tegon
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:latest
    container_name: tegon-supertokens
    depends_on:
      - db
    environment:
      POSTGRESQL_CONNECTION_URI: ${SUPERTOKEN_DATABASE_URL}
      REFRESH_TOKEN_VALIDITY: 2592000 # 30 days in seconds
      ACCESS_TOKEN_VALIDITY: 2592000 # 30 days in seconds
      PASSWORD_RESET_TOKEN_LIFETIME: 86400
    ports:
      - 3567:3567
    networks:
      - tegon
    restart: unless-stopped

  redis:
    image: redis:alpine3.19
    container_name: tegon-redis
    networks:
      - tegon
    ports:
      - 6379:6379
    restart: unless-stopped

  server:
    image: "tegonhq/tegon-server:${VERSION}"
    container_name: tegon-server
    depends_on:
      - db
      - supertokens
      - redis
      - typesense
    restart: unless-stopped
    networks:
      - tegon
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - FRONTEND_HOST=${FRONTEND_HOST}
      - PUBLIC_FRONTEND_HOST=${PUBLIC_FRONTEND_HOST}
      - BACKEND_HOST=${BACKEND_HOST}
      - PORT=${BACKEND_PORT}
      - SUPERTOKEN_CONNECTION_URI=${SUPERTOKEN_CONNECTION_URI}
      - MASTER_TOKEN=${MASTER_TOKEN}
      - REPLICATION_DATABASE_URL=${REPLICATION_DATABASE_URL}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_SCHEMA=${DB_SCHEMA}
      - REDIS_URL=${REDIS_URL}
      - REDIS_PORT=${REDIS_PORT}
      - TYPESENSE_API_KEY=${TYPESENSE_API_KEY}
      - TYPESENSE_HOST=${TYPESENSE_HOST}
      - TYPESENSE_PORT=${TYPESENSE_PORT}
      - TYPESENSE_PROTOCOL=${TYPESENSE_PROTOCOL}
      - GCP_BUCKET_NAME=${GCP_BUCKET_NAME}
      - GCP_SERVICE_ACCOUNT_FILE=${GCP_SERVICE_ACCOUNT_FILE}
      - PUBLIC_ATTACHMENT_URL=${PUBLIC_ATTACHMENT_URL}
      - COHERE_API_KEY=${COHERE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - 3001:3001

  webapp:
    image: "tegonhq/tegon-webapp:${VERSION}"
    container_name: tegon-webapp
    restart: unless-stopped
    depends_on:
      - server
    networks:
      - tegon
    environment:
      - BACKEND_URL=${BACKEND_URL}
      - NEXT_PUBLIC_BASE_HOST=${PUBLIC_FRONTEND_HOST}
      - NEXT_PUBLIC_VERSION=${VERSION}
      - NEXT_PUBLIC_SYNC_SERVER=${NEXT_PUBLIC_SYNC_SERVER}
      - NEXT_PUBLIC_SENTRY_DSN=${NEXT_PUBLIC_SENTRY_DSN}
    ports:
      - 8000:3000

  typesense:
    image: typesense/typesense:0.26.0.rc61
    container_name: typesense
    ports:
      - 8108:8108
    volumes:
      - typesense-data:/data
    networks:
      - tegon
    restart: unless-stopped
    command: --data-dir /data --api-key=${TYPESENSE_API_KEY} --enable-cors

  triggerapp:
    image: ghcr.io/triggerdotdev/trigger.dev:v3
    container_name: tegon-triggerapp
    restart: unless-stopped
    environment:
      V3_ENABLED: ${V3_ENABLED}
      DATABASE_URL: ${TRIGGER_DATABASE_URL}
      DIRECT_URL: ${TRIGGER_DATABASE_URL}
      SESSION_SECRET: ${TRIGGER_TOKEN}
      MAGIC_LINK_SECRET: ${TRIGGER_TOKEN}
      ENCRYPTION_KEY: ${TRIGGER_TOKEN}
      REDIS_HOST: ${REDIS_URL}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_TLS_DISABLED: ${REDIS_TLS_DISABLED}
      PORT: ${TRIGGER_PORT}
      REMIX_APP_PORT: ${TRIGGER_PORT}
      NODE_ENV: ${NODE_ENV}
      RUNTIME_PLATFORM: "docker-compose"
    ports:
      - 3030:3030
    networks:
      - tegon

  docker-provider:
    image: ghcr.io/triggerdotdev/provider/docker:v3
    container_name: tegon-docker-provider
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    user: root
    networks:
      - tegon
    depends_on:
      - triggerapp
    environment:
      PLATFORM_HOST: triggerapp
      PLATFORM_WS_PORT: ${TRIGGER_PORT}
      HTTP_SERVER_PORT: ${HTTP_SERVER_PORT}
      COORDINATOR_HOST: ${COORDINATOR_HOST}
      COORDINATOR_PORT: ${COORDINATOR_PORT}
      SECURE_CONNECTION: "false"

  coordinator:
    image: ghcr.io/triggerdotdev/coordinator:v3
    container_name: tegon-coordinator
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    user: root
    networks:
      - tegon
    depends_on:
      - triggerapp
    ports:
      - 9020:9020
    environment:
      PLATFORM_HOST: triggerapp
      PLATFORM_WS_PORT: ${TRIGGER_PORT}
      HTTP_SERVER_PORT: ${HTTP_SERVER_PORT}
      SECURE_CONNECTION: "false"

networks:
  app_network:
    driver: bridge
  tegon: {}

volumes:
  postgres-data:
  typesense-data:
