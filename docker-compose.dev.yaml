version: "3.8"

services:
  db:
    image: "tegonhq/tegon-postgres:${VERSION}"
    container_name: tegon-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    networks:
      - tegon
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:latest
    depends_on:
      - db
    environment:
      POSTGRESQL_CONNECTION_URI: ${SUPERTOKEN_DATABASE_URL}
      REFRESH_TOKEN_VALIDITY: 2592000 # 30 days in seconds
      ACCESS_TOKEN_VALIDITY: 2592000 # 30 days in seconds
      PASSWORD_RESET_TOKEN_LIFETIME: 86400
    ports:
      - 3567:3567
    networks:
      - tegon
    restart: unless-stopped

  redis:
    image: redis:alpine3.19
    networks:
      - tegon
    ports:
      - 6379:6379
    restart: unless-stopped

  typesense:
    image: typesense/typesense:0.26.0.rc61
    container_name: typesense
    ports:
      - 8108:8108
    volumes:
      - typesense-data:/data
    networks:
      - tegon
    restart: unless-stopped
    command: --data-dir /data --api-key=${TYPESENSE_API_KEY} --enable-cors

  triggerapp:
    image: ghcr.io/triggerdotdev/trigger.dev:v3
    restart: unless-stopped
    environment:
      V3_ENABLED: ${V3_ENABLED}
      DATABASE_URL: ${TRIGGER_DATABASE_URL}
      DIRECT_URL: ${TRIGGER_DATABASE_URL}
      SESSION_SECRET: ${SECRET}
      MAGIC_LINK_SECRET: ${SECRET}
      ENCRYPTION_KEY: ${SECRET}
      REDIS_HOST: ${REDIS_URL}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_TLS_DISABLED: ${REDIS_TLS_DISABLED}
      PORT: ${TRIGGER_PORT}
      REMIX_APP_PORT: ${TRIGGER_PORT}
      RUNTIME_PLATFORM: "docker-compose"
      DEPLOY_REGISTRY_HOST: ${DEPLOY_REGISTRY_HOST}
      DEPLOY_REGISTRY_NAMESPACE: ${DEPLOY_REGISTRY_NAMESPACE}

    ports:
      - 3030:3030
    networks:
      - tegon
    depends_on:
      - db
      - redis

  docker-provider:
    image: ghcr.io/triggerdotdev/provider/docker:v3
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    user: root
    networks:
      - tegon
    depends_on:
      - triggerapp
    environment:
      PLATFORM_HOST: triggerapp
      PLATFORM_WS_PORT: ${TRIGGER_PORT}
      HTTP_SERVER_PORT: ${HTTP_SERVER_PORT}
      COORDINATOR_HOST: ${COORDINATOR_HOST}
      COORDINATOR_PORT: ${COORDINATOR_PORT}
      SECURE_CONNECTION: "false"

  coordinator:
    image: ghcr.io/triggerdotdev/coordinator:v3
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    user: root
    networks:
      - tegon
    depends_on:
      - triggerapp
    ports:
      - 9020:9020
    environment:
      PLATFORM_HOST: triggerapp
      PLATFORM_WS_PORT: ${TRIGGER_PORT}
      HTTP_SERVER_PORT: ${HTTP_SERVER_PORT}
      SECURE_CONNECTION: "false"

networks:
  app_network:
    driver: bridge
  tegon: {}

volumes:
  postgres-data:
  typesense-data:
